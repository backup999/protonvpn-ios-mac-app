extends "lhc:///Trains.pkl"

// The base configuration which the other trains inherit from.
local base = new Train {
    templatesDirectory = "Integration/Templates"
    checklistDirectory = "Integration/Checklists"
    attrsRef = "refs/notes/proton/attrs"
    checklistsRef = "refs/notes/proton/checklists"

    trailers = new Trailers {
        projectId = "Jira-Id"
    }

    build = new BuildSettings {
        productName = "ProtonVPN"
        userProperties = new Mapping {
            ["platformVersion"] = "14.4.1"
            ["toolchainVersion"] = "15.4"
            ["appConfigurations"] = "Release,Staging"
        }
    }

    // Linter settings are common for both trains.
    linter = new {
        projectIdPrefix = "VPNAPPL-"
        requireCommitTypes = new Listing {
            "feat"
            "fix"
            "build"
            "test"
            "refactor"
            "build"
            "ci"
            "doc"
            "chore"
            "i18n"
            "release"
        }
    }

    userProperties = new Mapping {
        ["releaseBranch"] = "jkb/feat/VPNAPPL-1507-new-ci"
    }
}

local mac = (base) {
    name = "mac"
    displayName = "macOS"
    tagPrefix = "mac/"

    trailers = (base.trailers) {
        releasePipeline = "Release-Pipeline-macOS"
    }

    build = (base.build) {
        scheme = "ProtonVPN-macOS"
        teamId = "J6S6Q257EK"
        platform = "macOS"
        teamName = "ProtonVPN AG"
        xcodeproj = "apps/macos/macOS.xcodeproj"
        appIdentifier = "ch.protonvpn.mac"
        outputDirectory = "output/mac"
        testplansDirectory = "apps/macos/TestPlans"
        dmgConfigPath = "Integration/Scripts/dmg_config.py"

        match = new MatchSettings {
            branchName = "macos/vpn-ci"
        }
    }

    distribution = new Sparkle {
        minimumSystemVersion = "12.0"
        phasedRolloutInterval = 86400
    }
}

local ios = (base) {
    name = "ios"
    displayName = "iOS"
    tagPrefix = "ios/"

    trailers = (base.trailers) {
        releasePipeline = "Release-Pipeline-iOS"
    }

    build = (base.build) {
        scheme = "ProtonVPN-iOS"
        teamId = "2SB5Z68H26"
        platform = "iOS"
        teamName = "Proton AG"
        xcodeproj = "apps/ios/iOS.xcodeproj"
        appIdentifier = "ch.protonmail.vpn"
        outputDirectory = "output/ios"
        testplansDirectory = "apps/ios/TestPlans"

        match = new MatchSettings {
            branchName = "ios/vpn-ci"
        }
    }

    distribution = new AppStore {
        testflightGroup =
            if (base.releaseChannel == "alpha") "Internal Members" else
            if (base.releaseChannel == "beta") "Public Beta" else null
        announceForum = "#test-shahin"
    }
}

// NB: tvOS inherits properties from iOS, _not_ the base train
local tv = (ios) {
    name = "tv"
    displayName = "tvOS"
    tagPrefix = "tv/"

    trailers = (base.trailers) {
        releasePipeline = "Release-Pipeline-tvOS"
    }

    build = (base.build) {
        scheme = "ProtonVPN-tvOS"
        teamId = "2SB5Z68H26"
        platform = "tvOS"
        xcodeproj = "apps/tvos/tvOS.xcodeproj"
        appIdentifier = "ch.protonmail.vpn"
        outputDirectory = "output/tv"
        testplansDirectory = "apps/tvos/TestPlans"

        match = new MatchSettings {
            branchName = "tvos/vpn-ci"
        }

        userProperties = (base.build.userProperties) {
            ["appConfigurations"] = "Release"
        }
    }
}

trains = new { ios mac tv }
