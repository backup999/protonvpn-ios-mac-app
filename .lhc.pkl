extends "lhc:///Trains.pkl"

local macOSScopes = new Listing {
    "mac"
    "macos"
    "sparkle"
    "macosextension"
    "systemextensions"
    "sysext"
}

local iOSScopes = new Listing {
    "ios"
    "iosextension"
    "iosredesign"
    "ioshome"
}

local tvOSScopes = new Listing {
    "tvos"
    "tvextension"
    "tvosextension"
}

// The base configuration which the other trains inherit from.
local base = new Train {
    templatesDirectory = "Integration/Templates"
    checklistDirectory = "Integration/Checklists"
    attrsRef = "refs/notes/proton/attrs"
    checklistsRef = "refs/notes/proton/checklists"

    trailers = new Trailers {
        projectId = "Jira-Id"
    }

    build = new BuildSettings {
        ci = if (read?("env:CI") == "true") new PipelineProperties {
            userProperties = new Mapping {
                // ci-vilnius-1 is just a poor wittle M1 machine. Beefy vilnius-6 can handle more
                ["pipelineHosts"] = "ci-vilnius-1,ci-vilnius-6,ci-vilnius-6"
            }
        } else null
        productName = "ProtonVPN"
        userProperties = new Mapping {
            ["platformVersion"] = "14.6.1"
            ["toolchainVersion"] = "15.4"
            ["appConfigurations"] = "Release,Staging"
        }
    }

    // Linter settings are common for both trains.
    linter = new {
        projectIdPrefix = "VPNAPPL-"

        commitTypes = new LinterPolicyItem {
            policy = "Require"
            items = new Listing {
                "feat"
                "fix"
                "build"
                "test"
                "refactor"
                "build"
                "ci"
                "doc"
                "chore"
                "i18n"
                "release"
            }
        }

        commitScopes = new LinterPolicyItem {
            policy = "Ignore"
            // These scopes will be ignored by every train.
            items = new Listing {
                "ci"
                "doc"
                "docs"
            }
        }
    }

    userProperties = new Mapping {
        ["releaseBranch"] = "develop"
    }
}

local mac = (base) {
    name = "mac"
    displayName = "macOS"
    tagPrefix = "mac/"

    trailers = (base.trailers) {
        releasePipeline = "Release-Pipeline-macOS"
        failedPipeline = "Pipeline-Failure-macOS"
    }

    linter = (base.linter) {
        commitScopes = (base.linter.commitScopes) {
            items = (base.linter.commitScopes.items) {
                ...iOSScopes
                ...tvOSScopes
            }
        }
    }

    build = (base.build) {
        scheme = "ProtonVPN-macOS"
        teamId = "J6S6Q257EK"
        platform = "macOS"
        teamName = "ProtonVPN AG"
        xcodeproj = "apps/macos/macOS.xcodeproj"
        appIdentifier = "ch.protonvpn.mac"
        outputDirectory = "output/mac"
        testplansDirectory = "apps/macos/TestPlans"
        dmgConfigPath = "Integration/Scripts/dmg_config.py"

        match = new MatchSettings {
            branchName = "macos/vpn-ci"
        }
    }

    distribution = new Sparkle {
        minimumSystemVersion = "12.0"
        phasedRolloutInterval = 86400

        announceForum =
            if (base.releaseChannel == "alpha") read?("env:SLACK_BUILDS_URL") else
            read?("env:SLACK_RELEASE_URL")

        userProperties = new Mapping {
            ["internalDownloadUrl"] = read?("env:CI_NEXUS_URL") ?? ""
        }
    }
}

local ios = (base) {
    name = "ios"
    displayName = "iOS"
    tagPrefix = "ios/"

    trailers = (base.trailers) {
        releasePipeline = "Release-Pipeline-iOS"
        failedPipeline = "Pipeline-Failure-iOS"
    }

    linter = (base.linter) {
        commitScopes = (base.linter.commitScopes) {
            items = (base.linter.commitScopes.items) {
                ...macOSScopes
                ...tvOSScopes
            }
        }
    }

    build = (base.build) {
        scheme = "ProtonVPN-iOS"
        teamId = "2SB5Z68H26"
        platform = "iOS"
        teamName = "Proton AG"
        xcodeproj = "apps/ios/iOS.xcodeproj"
        appIdentifier = "ch.protonmail.vpn"
        outputDirectory = "output/ios"
        testplansDirectory = "apps/ios/TestPlans"

        match = new MatchSettings {
            branchName = "ios/vpn-ci"
        }

        userProperties = (base.build.userProperties) {
            ["simulatorRuntime"] = "iOS 17.5"
        }
    }

    distribution = new AppStore {
        testflightGroup =
            if (base.releaseChannel == "alpha") "App Store Connect Users" else
            if (base.releaseChannel == "beta") "Public Beta" else null

        announceForum =
            if (base.releaseChannel == "alpha") read?("env:SLACK_BUILDS_URL") else
            read?("env:SLACK_RELEASE_URL")

        languages = "en-US,ar,zh-TW,nl,en-GB,fr,fr-CA,de,id,it,ja,pl,pt-BR,ru,es-MX,es,uk"
    }
}

// NB: tvOS inherits properties from iOS, _not_ the base train
local tv = (ios) {
    name = "tv"
    displayName = "tvOS"
    tagPrefix = "tv/"

    trailers = (base.trailers) {
        releasePipeline = "Release-Pipeline-tvOS"
        failedPipeline = "Pipeline-Failure-tvOS"
    }

    linter = (base.linter) {
        commitScopes = (base.linter.commitScopes) {
            items = (base.linter.commitScopes.items) {
                ...macOSScopes
                ...iOSScopes
            }
        }
    }

    build = (base.build) {
        scheme = "ProtonVPN-tvOS"
        teamId = "2SB5Z68H26"
        platform = "tvOS"
        xcodeproj = "apps/tvos/tvOS.xcodeproj"
        appIdentifier = "ch.protonmail.vpn"
        outputDirectory = "output/tv"
        testplansDirectory = "apps/tvos/TestPlans"

        ci = if (read?("env:CI") == "true") new PipelineProperties {
            userProperties = new Mapping {
                ["pipelineHosts"] = "ci-vilnius-6" // vilnius-1 has an issue with TV builds for now
            }
        } else null

        match = new MatchSettings {
            branchName = "tvos/vpn-ci"
        }

        userProperties = (base.build.userProperties) {
            ["appConfigurations"] = "Release"
            ["simulatorRuntime"] = "tvOS 17.5"
        }
    }
}

trains = new { ios mac tv }
